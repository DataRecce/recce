name: Run Cloud Smoke Test (DBT)

on:
  push:
    branches:
      - main
    paths-ignore:
      - "js/**"
      - "recce/data/**"
  pull_request_target:
    branches:
      - main
    paths-ignore:
      - "js/**"
      - "recce/data/**"

jobs:
  smoke-test-cloud:
    concurrency:
      group: smoke-test-cloud
      cancel-in-progress: false
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        include:
          - python-version: "3.11"
            dbt-version: "1.8"
          - python-version: "3.13"
            dbt-version: "latest"
    steps:
      - name: Check external code before checkout
        run: |
          PERMISSION=$(gh api repos/${{ github.repository }}/collaborators/${{ github.triggering_actor }}/permission --jq '.permission')
          if [[ "$PERMISSION" != "write" && "$PERMISSION" != "admin" ]]; then
            echo "Please review the code from ${{ github.actor }}, then re-run the workflow."
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.sha }}
          token: ${{ secrets.RECCE_CLOUD_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip" # caching pip dependencies
          cache-dependency-path: setup.py
      - run: |
          python -m pip install --upgrade pip
          if [ "${{ matrix.dbt-version }}" == "latest" ]; then
            pip install dbt-core
            pip install dbt-duckdb
          else
            pip install dbt-core~=${{ matrix.dbt-version }}.0
            pip install dbt-duckdb~=${{ matrix.dbt-version }}.0
          fi

      - name: Install Recce
        run: |
          pip install .

      - name: Run smoke test - dbt
        run: |
          ./integration_tests/dbt/smoke_test_cloud.sh
        env:
          GITHUB_TOKEN: ${{ secrets.RECCE_CLOUD_TOKEN }}
          RECCE_STATE_PASSWORD: ${{ vars.RECCE_STATE_PASSWORD}}
